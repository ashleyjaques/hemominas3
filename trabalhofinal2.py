import streamlit as st
import pandas as pd
import os
from datetime import datetime

# T√≠tulo da campanha
st.title('Campanha de Doa√ß√£o de Sangue')

# Adicionando uma imagem
st.image("Campanha.png")

# Descri√ß√£o da campanha
st.markdown("""
## Junte-se a n√≥s para salvar vidas!

A doa√ß√£o de sangue √© um ato de solidariedade que pode salvar at√© tr√™s vidas. 
Participe da nossa campanha e ajude a promover a doa√ß√£o de sangue na sua comunidade.

### Por que doar sangue?
- **Salvar Vidas**: Cada doa√ß√£o pode ajudar at√© tr√™s pessoas.
- **Doa√ß√µes Necess√°rias**: Os hospitais sempre precisam de sangue.
- **Solidariedade**: Ajudar quem precisa √© um ato nobre.

### Como funciona a doa√ß√£o?
1. **Registro**: Preencha o formul√°rio abaixo.
2. **Coleta**: Dirija-se ao local de coleta mais pr√≥ximo.
3. **Doa√ß√£o**: O processo de doa√ß√£o √© r√°pido e seguro.

### Perguntas Frequentes
- **Quem pode doar sangue?**: Adultos saud√°veis entre 18 e 69 anos.
- **Quanto tempo leva?**: O processo leva cerca de 30 minutos.
- **Com que frequ√™ncia posso doar?**: Homens podem doar a cada 3 meses e mulheres a cada 4 meses.
""")

# Formul√°rio de doa√ß√£o
st.subheader('Formul√°rio de Doa√ß√£o')

with st.form('Formul√°rio de Doador', clear_on_submit=True):
    col1, col2 = st.columns(2)

    nome = col1.text_input('Nome:')
    sobrenome = col2.text_input('Sobrenome:')
    email = col1.text_input('E-mail:')
    telefone = col2.text_input('Telefone:')
    
    idade = col1.number_input('Idade:', min_value=18, max_value=69)
    tipo_sanguineo = col2.selectbox('Tipo Sangu√≠neo:', ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'])
    
    submitted = st.form_submit_button("Enviar")

# Fun√ß√£o para verificar elegibilidade
def pode_doar(doen√ßas):
    doen√ßas_restritivas = ['Hipertens√£o', 'Doen√ßas card√≠acas', 'Doen√ßas sangu√≠neas', 'Gripe ou tosse recente']
    
    # Se a lista de doen√ßas estiver vazia ou contiver apenas "Nenhuma doen√ßa acima"
    if 'Nenhuma doen√ßa acima' in doen√ßas:
        return "Voc√™ pode doar sangue!"
    
    # Verifica se alguma doen√ßa restritiva est√° presente
    if any(d in doen√ßas for d in doen√ßas_restritivas):
        return "Voc√™ n√£o pode doar sangue."
    
    return "Voc√™ pode doar sangue!"

# Sidebar para entrada de dados
st.sidebar.title("Verifica√ß√£o de Elegibilidade para Doa√ß√£o de Sangue")
doen√ßas = st.sidebar.multiselect("Selecione suas doen√ßas:", 
                                  ['Nenhuma doen√ßa acima', 'Hipertens√£o', 'Doen√ßas card√≠acas', 
                                   'Doen√ßas sangu√≠neas', 'Gripe ou tosse recente', 
                                   'Outra doen√ßa'])

# Bot√£o para verificar elegibilidade
if st.sidebar.button("Verificar"):
    resultado = pode_doar(doen√ßas)
    st.sidebar.write(resultado)

col3, col4 = st.columns(2)
dm = col3.date_input('Data de inscri√ß√£o:', format="DD/MM/YYYY")
obs = col4.text_area('Observa√ß√µes (medicamentos usados e doen√ßas n√£o citadas):')

# Bot√£o de envio
enviar = st.button("enviar")
if enviar:
    if nome and sobrenome and email:
        # Verifica se a pessoa pode doar
        if not doen√ßas:
            st.success('Obrigado por se registrar como doador! Voc√™ pode doar!')
        
        # Cria√ß√£o do DataFrame com os dados do formul√°rio
        dados = {
            "Nome": [nome],
            "Sobrenome": [sobrenome],
            "Email": [email],
            "Telefone": [telefone],
            "Idade": [idade],
            "Tipo Sangu√≠neo": [tipo_sanguineo],
            "Observa√ß√µes": [obs],
            "Data de Inscri√ß√£o": [datetime.now().strftime("%Y-%m-%d %H:%M:%S")]
        }
        df = pd.DataFrame(dados)

   # Definindo o caminho do arquivo
        pasta = "dados_doadores"
        if not os.path.exists(pasta):  # Se a pasta n√£o existir, cria a pasta
            os.makedirs(pasta)
        
        # Criando o nome do arquivo com data e hora para garantir que seja √∫nico
        arquivo_csv = os.path.join(pasta, f'doador_{datetime.now().strftime("%Y%m%d_%H%M%S")}.csv')

        # Salvando o DataFrame em um arquivo CSV dentro da pasta 'dados_doadores'
        df.to_csv(arquivo_csv, sep=';', index=False)

        # Mensagem de sucesso
        st.write(f'Dados salvos em: {arquivo_csv}')

# T√≠tulo para a se√ß√£o de feedback
st.subheader("Deixe seu Feedback sobre a Doa√ß√£o de Sangue")

# Formul√°rio para o feedback
with st.form('feedback_form', clear_on_submit=True):
    feedback = st.text_area('Como foi sua experi√™ncia ao doar sangue? (Compartilhe seus pensamentos e sugest√µes)')
    enviar_feedback = st.form_submit_button('Enviar Feedback')

    if enviar_feedback:
        if feedback:
            # Cria√ß√£o do DataFrame para salvar o feedback
            feedbacks_pasta = "feedbacks"
            if not os.path.exists(feedbacks_pasta):
                os.makedirs(feedbacks_pasta)
            arquivo_feedback = os.path.join(feedbacks_pasta, f'feedback_{datetime.now().strftime("%Y%m%d_%H%M%S")}.csv')

            # Cria√ß√£o do DataFrame com os dados do feedback
            feedback_dados = {
                "Feedback": [feedback],
                "Data de Envio": [datetime.now().strftime("%Y-%m-%d %H:%M:%S")]
            }
            df_feedback = pd.DataFrame(feedback_dados)

            # Salvando o feedback no arquivo CSV
            df_feedback.to_csv(arquivo_feedback, sep=';', index=False)

            st.success('Obrigado por compartilhar seu feedback!')

# Exibindo feedbacks anteriores (opcional)
st.subheader("Feedbacks Anteriores")
feedbacks_anteriores = []

# Verifica se h√° feedbacks salvos
feedbacks_pasta = "feedbacks"
if os.path.exists(feedbacks_pasta):
    feedback_files = [f for f in os.listdir(feedbacks_pasta) if f.endswith('.csv')]
    
    for feedback_file in feedback_files:
        df_feedbacks = pd.read_csv(os.path.join(feedbacks_pasta, feedback_file), sep=';')
        feedbacks_anteriores.append(df_feedbacks)

# Exibindo todos os feedbacks na tela
if feedbacks_anteriores:
    for df in feedbacks_anteriores:
        for index, row in df.iterrows():
            st.write(f"**Feedback:** {row['Feedback']}")
            st.write(f"**Data:** {row['Data de Envio']}")
            st.markdown("---")
else:
    st.write("Ainda n√£o h√° feedbacks dispon√≠veis.")

# Sidebar para agendar doa√ß√£o
st.sidebar.header('Agende sua doa√ß√£o')
col5, col6 = st.sidebar.columns(2)

data_agendamento = col5.date_input('Data de agendamento:', format="DD/MM/YYYY")
horario_agendamento = col6.selectbox('Hor√°rio:', ['7:30', '8:00', '8:30', '9:00', '9:30', '10:00', '10:30', '11:00', '11:30'])

# Se√ß√£o de contato
st.markdown('---')
st.subheader('Entre em contato conosco')

st.write('Se voc√™ tiver alguma d√∫vida ou quiser mais informa√ß√µes, entre em contato:')
st.write('üìß Email: contato.sjr.captacao@hemominas.mg.gov.br')
st.write('üìû Telefone: (32) 3322-2900')
st.write('[üåê Facebook](https://m.facebook.com/hemominas/photos/)')
st.write('[üê¶ Twitter](https://twitter.com/hemominas)')
st.write('[üì∏ Instagram](https://www.instagram.com/hemominas/)')

